today <- as.date("2014-06-12")
today
today <- as.Date("2014-06-12")
today
today <- as.Date("2014-06-12")
today + 1
numbers <- 1:5
numbers[0]
numbers[1]
numbers <- 1:5
numbers[1]
"hello world"
id <- 1:3
name <- c("Ryan","Lindsey","Sugars")
dFrame <- data.frame(id,name)
dFrame
View(dFrame)
hello <- "Hello Furture Data Scientists!"
hello
myName <- "Ryan Samo"
hello <- "Hello Furture Data Scientists!"
myName
hello
myName <- "Ryan Samo"
hello <- "Hello Future Data Scientists!"
myName
hello
find.packages("devtools")
find.package("devtools")
install.packages("devtools")
library(devtools)
find(rtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
getwd
getwd()
x <-4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
class(rbind(x, y))
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- list(2, "a", "b", TRUE)
class(x[[2]])
x <- list(2, "a", "b", TRUE)
x
x <- 1:4
y <- 2:3
x + y
x <- 1:4
y <- 2:3
class(x + y)
x <- 1:4
y <- 2:3
class(x)
x <- 1:4
y <- 2:3
x
y
x <- 1:4
y <- 2:3
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x > 10] == 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x > 10] <- 4
x
x <- read.csv("C:\Users\Samo\Dropbox\Coursera\Data Science Track\2-R Programming\Week 1\hw1_data.csv")
x
x <- read.csv("hw1_data.csv")
x
con <- read.csv("hw1_data.csv",header = TRUE)
con
getwd()
setwd("C:/Users/Samo/Dropbox/Coursera/Data Science Track/2-R Programming/Week 1")
getwd()
con <- read.csv("hw1_data.csv",header = TRUE)
con
con <- read.csv("hw1_data.csv",header = TRUE)
con
col.names(con)
con <- read.csv("hw1_data.csv",header = TRUE)
con
con <- read.csv("hw1_data.csv",header = TRUE,first.rows=2)
con
con <- read.csv("hw1_data.csv",header = TRUE,nrows=2)
con
hw1Frame <- read.csv("hw1_data.csv",header = TRUE,nrows=2)
hw1Frame
nrow(hw1Frame)
hw1Frame <- read.csv("hw1_data.csv",header = TRUE)
nrow(hw1Frame)
hw1Frame <- read.csv("hw1_data.csv",header = TRUE)
dim(hw1Frame)
hw1Frame <- read.csv("hw1_data.csv",header = TRUE)
tail(hw1Frame,n=2)
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
#Question 13
nrows(hw1_Frame)
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
#Question 13
nrow(hw1_Frame)
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
#Question 12
head(hw1_Frame,n=2)
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
#Question 11
head(hw1_Frame,n=0)
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
#Question 11
names(hw1_Frame)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
class(rbind(x, y))
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
class(rbind(x, y))
dim(rbind(x, y))
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
hw1_Frame[,c('Ozone')]
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
hw1_Frame[47,c('Ozone')]
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
is.na(hw1_Frame[,c('Ozone')])
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- complete.cases(hw1_Frame[,c('Ozone')])
sum(x)
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- complete.cases(hw1_Frame[,c('Ozone')])
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
colSums (hw1_Frame[,c('Ozone')], na.rm = TRUE, dims = 1)
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- sum(is.na(hw1_Frame[,c('Ozone')]))
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- !is.na(hw1_Frame[,c('Ozone')])
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- mean(!is.na(hw1_Frame[,c('Ozone')]))
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- complete.cases(hw1_Frame[,c('Ozone')])
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
hw1_Frame
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- hw1_Frame[,c('Ozone')]
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- hw1_Frame[,c('Ozone')]
y <- complete.cases(x)
y
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- hw1_Frame[,c('Ozone')]
y <- complete.cases(x) != is.na(x)
y
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- hw1_Frame[complete.cases(hw1_Frame),c('Ozone')]
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- hw1_Frame[complete.cases(hw1_Frame),c('Ozone')]
y <- mean(x)
y
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Ozone > 31)
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Ozone > 31,Temp > 90)
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Ozone > 31|Temp > 90)
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Ozone > 31 & Temp > 90)
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Ozone > 31 & Temp > 90)
y <- x[,c('Solar.R')]
y
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Ozone > 31 & Temp > 90)
y <- x[,c('Solar.R')]
z <- mean(y)
z
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Month = 6)
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Month = 6)
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Month == 6)
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Month == 6)
y <- x[,c('Temp')]
y
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Month == 6)
y <- x[,c('Temp')]
z <- mean(y)
z
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Month == 5)
x
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Month == 5)
y <- x[,c('Ozone')]
y
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Month == 5)
y <- x[,c('Ozone')]
z <- max(y)
z
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Month == 5 & !is.na(Ozone))
y <- x[,c('Ozone')]
y
hw1_Frame <- read.csv("hw1_data.csv",header = TRUE)
x <- subset(hw1_Frame, Month == 5 & !is.na(Ozone))
y <- x[,c('Ozone')]
z <- max(y)
z
debug(ls)
ls
ls(1)
q
q
C
C
Q
Q
Q
Q
setwd("C:/Users/Samo/git/ProgrammingAssignment2")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(1,2,3)
makeVector(1:3)
makeVector(cacheMean)
makeVector
makeVector$get
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(1:3)$get
makeVector(1:3)$getmean
myMean <- makeVector(1:3)$getmean
myMean
myMean(2:5)
myMean(5)
myMean
1+2
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector$m
makeVector(1:5)$m
makeVector(1:5)$y
makeVector(1:5)$x
makeVector(1:5)$get
x$get
makeVector(1:5)$list
source('C:/Users/Samo/git/ProgrammingAssignment2/cachematrix.R')
makeVector(1:5)
cacheMean(1:5)
cachemean(1:5)
cachemean(5)
debugSource('C:/Users/Samo/git/ProgrammingAssignment2/cachematrix.R')
cachemean(1:5)
cachemean(1:5)
source('~/.active-rstudio-document')
debugSource('C:/Users/Samo/git/ProgrammingAssignment2/cachematrix.R')
cachemean(1:5)
debugSource('C:/Users/Samo/git/ProgrammingAssignment2/cachematrix.R')
res <- makeVector(1:5)
cachemean(res)
source('C:/Users/Samo/git/ProgrammingAssignment2/cachematrix.R')
m <- matrix(data = 1:5, nrow = 1, ncol = 1)
m <- matrix(data = 1:5, nrow = 5, ncol = 2)
View(m)
m <- matrix(data = 1:5, nrow = 2, ncol = 5)
m
m <- matrix(data = 1:10, nrow = 2, ncol = 5)
m
z <- makeCacheMatrix(m)
m <- matrix(data = 1:10, nrow = 2, ncol = 5)
z <- makeCacheMatrix(m)
cacheSolve(z)
m <- matrix(data = 1:10, nrow = 2, ncol = 5)
z <- makeCacheMatrix(m)
cacheSolve(z)
m <- matrix(data = 1:8, nrow = 2, ncol = 4)
z <- makeCacheMatrix(m)
cacheSolve(z)
m <- matrix(data = 1:4, nrow = 2, ncol = 2)
z <- makeCacheMatrix(m)
cacheSolve(z)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('C:/Users/Samo/git/ProgrammingAssignment2/cachematrix.R')
m <- matrix(data = 1:4, nrow = 2, ncol = 2)
m
z <- makeCacheMatrix(m)
cacheSolve(z)
source('C:/Users/Samo/git/ProgrammingAssignment2/cachematrix.R')
m <- matrix(data = 1:4, nrow = 2, ncol = 2)
m
z <- makeCacheMatrix(m)
cacheSolve(z)
source('C:/Users/Samo/git/ProgrammingAssignment2/cachematrix.R')
z <- makeCacheMatrix(m)
cacheSolve(z)
z <- makeCacheMatrix(m)
cacheSolve(z)
cacheSolve(z)
cacheSolve(z)
m
